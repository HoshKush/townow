<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="comment">
<!-- <resultMap type="commentDTO" id="commentMap"> -->
<!-- 	<result property="cmt_id" column="cmt_id"/> -->
<!-- 	<result property="brd_id" column="brd_id"/> -->
<!-- 	<result property="cmt_like" column="cmt_like"/> -->
<!-- 	<result property="cmt_dislike" column="cmt_dislike"/> -->
<!-- 	<result property="cmt_grp" column="cmt_grp"/> -->
<!-- 	<result property="cmt_content" column="cmt_content"/> -->
<!-- 	<result property="create_time" column="create_time"/> -->
<!-- 	<result property="update_time" column="update_time"/> -->
<!-- 	<result property="usersdto.nickname" column="nickname"/> -->
<!-- </resultMap> -->

<insert id="create" parameterType="CommentDTO">
insert into comment(brd_id, cmt_content, email, cmt_grp)
values(#{brd_id}, #{cmt_contet}, #{email}, #{cmt_grp})
</insert>

<update id="update" parameterType="CommentDTO">
update comment set
content = #{content},
update_time = unix_timestamp()
where cmt_id = #{cmt_id}
</update>

<update id="likeUp" parameterType="int">
update comment set
cmt_like = cmt_like + 1
where cmt_id = #{cmt_id}
</update>

<update id="dislikeUp" parameterType="int">
update comment set
cmt_dislike = cmt_dislike + 1
where cmt_id = #{cmt_id}
</update>

<select id="hasGroup" parameterType="int" resultType="String">
select count(*) from comment where cmt_grp = {cmt_id}
</select>

<select id="nicknameOf" parameterType="int" resultType="String">
select u.nickname as nickname from users as u, comment as c
where cmt_id = #{cmt_id} and u.email = c.email
</select>

<delete id="delete" parameterType="int">
delete from comment
where cmt_id = #{pk}
</delete>

<delete id="deleteAll" parameterType="int">
delete from comment
where brd_id = #{brd_id}
</delete>

<select id="list" parameterType="Map" resultType="CommentDTO">
select 
cmt_id, cmt_content, create_time, cmt_grp, cmt_like,
cmt_dislike, brd_id, r
from(
	select
	cmt_id, cmt_content, create_time, cmt_grp, cmt_like,
	cmt_dislike, brd_id, rownum r 
	from(
		select 
		cmt_id, cmt_content, create_time, cmt_grp, cmt_like, cmt_dislike,
		brd_id
		from comment 
		where brd_id = #{brd_id}
		order by cmt_id DESC
		))
		<![CDATA[
		where r >= #{sno} and r<=#{eno}
		]]>
</select>

<select id="total" resultType="int" parameterType="Map">
select count(*) from comment
where brd_id = #{brd_id}
</select>

</mapper>